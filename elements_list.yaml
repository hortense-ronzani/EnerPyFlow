---
Production:
  smr:
    activate: True
    energy: 'heat_high'
    environment: 'usine'  
    minimum_type: 'constant'
    minimum: 0
    maximum_type: 'constant'
    maximum: 300 # MWh
    cost_type: 'constant'
    cost: 80 # €/MWh high temperature
    factor: 1.

  PV:
    activate: True
    energy: 'electricity'
    environment: 'usine'
    minimum_type: 'constant'
    minimum: 0
    maximum_type: 'hourly'
    maximum: 'usine.csv//PV (MWhe)'

  heat_grid:
    activate: True
    energy: 'heat_low'
    environment : 'usine'
    minimum_type: 'constant'
    minimum: -100 # MWh
    maximum_type: 'constant'
    maximum: 100 # MWh
    cost_type: 'constant'
    cost: 10 # €/MWh low temperature

  PV2:
    activate: False
    energy: 'electricity'
    environment: 'house'
    minimum_type: 'constant'
    minimum: 0
    maximum_type: 'hourly'
    maximum: 'data_sample.csv//PV (Wh)' # sample of PV production chronicle for 1 kWc installed
    # Total production minimum = minimum * factor
    # Total production maximum = maximum * factor
    factor: 3. # if set to 'auto', will be optimized between 0. and 5.
    factor_low_bound: 0.
    factor_up_bound: 5.
    # Cost of technology = installation_cost * factor
    installation_cost: 0. # €/kWc

  grid:
    activate: False
    energy: 'electricity'
    environment: 'house'
    minimum_type: 'constant'
    minimum: 0 # W (~kVA)
    maximum_type: 'constant'
    maximum: 9000 # W (~kVA)
    cost_type: 'constant'
    cost : 0.0001952 # 195,2 €/MWh tarif base EDF
    # cost: 'data_sample.csv//Electricity_price (euros/Wh)'

  external_charging_station:
    activate: False
    energy: 'electricity'
    environment: 'car'
    minimum_type: 'constant'
    minimum: 0
    cost_type: 'constant'
    cost: 0.000200 # €/Wh 200 €/MWh
  
  gas_station:
    activate: False
    energy: 'oil'
    environment: 'car'
    minimum_type: 'constant'
    minimum: 0
    cost_type: 'constant'
    cost: 1.7 # €/L

# Consumptions are inputs; energy levels required are not variable
Consumption:
  demand_high_temp_fix:
    activate: True
    energy: 'heat_high'
    environment: 'usine'
    value_type: 'hourly'
    value: 'usine.csv//demand_high_temp (MWh)'
    factor: 0.95
    dispatchable: False

  demand_high_temp_dispatchable:
    activate: True
    energy: 'heat_high'
    environment: 'usine'
    value_type: 'hourly'
    value: 'usine.csv//demand_high_temp (MWh)'
    factor: 0.05
    dispatchable: True
    dispatch_window: 6 # h = [-2h, +2h]
    maximum_hourly_dispatch: 4. # MWh

  demand_elec:
    activate: True
    energy: 'electricity'
    environment: 'usine'
    value_type: 'constant'
    value: 45. # MWhe

  demand_low_temp:
    activate: True
    energy: 'heat_low'
    environment: 'usine'
    value_type: 'constant'
    value: 10. # MWh

  house_fixed_electricity_consumption:
    activate: False
    energy: 'electricity'
    environment: 'house'
    value_type: 'hourly'
    value: 'data_sample.csv//conso (Wh)'
    factor: 0.8
    dispatchable: False

  house_daily_dispatchable_electricity_consumption:
    activate: False
    energy: 'electricity'
    environment: 'house'
    value_type: 'hourly'
    value: 'data_sample.csv//conso (Wh)'
    factor: 0.2
    dispatchable: True
    dispatch_window: 12 # h (-12h, +12h)
    maximum_hourly_dispatch: 250. # Wh

  house_weekly_dispatchable_electricity_consumption:
    activate: False
    energy: 'electricity'
    environment: 'house'
    value_type: 'hourly'
    value: 'data_sample.csv//conso (Wh)'
    factor: 0.25
    dispatchable: True
    dispatch_window: 192 # h (-96h, +96h)
    maximum_hourly_dispatch: 250. # Wh

  car_use:
    activate: False
    energy: 'distance'
    environment: 'car'
    value_type: 'hourly'
    value: 'data_sample.csv//Distances_traveled (km)'

  house_heating:
    activate: False
    energy: 'heat'
    environment: 'house'
    value_type: 'constant'
    value: 250. # Wh thermiques

Storage:
  batterie_usine:
    activate: True
    energy: 'electricity'
    environment: 'usine'
    capacity: 100 # MWhe
    initial_SOC: 0.5
    factor: 1.
    efficiency: 1.

  home_battery:
    activate: False
    energy: 'electricity'
    environment: 'house'
    capacity: 5000 # Wh
    efficiency: 0.95
    initial_SOC: 0.5 # SOC of 50% at t0
    calendar_aging: 0.999
    # Total storage capacity = capacity * factor
    factor: 'auto' # If set to 'auto', will be optimized between values 0. and 5.
    # Technology cost = unit_cost * factor
    unit_cost: 3.
  
  car_battery:
    activate: False
    energy: 'electricity'
    environment: 'car'
    capacity: 15000 # Wh
    efficiency: 0.95
    initial_SOC: 0.5 # SOC of 50% at t0
    calendar_aging: 0.999
    factor: 1.
    unit_cost: 0. #3.

  trailer_battery:
    activate: False
    energy: 'electricity'
    environment: 'module'
    capacity: 15000 # Wh
    efficiency: 0.95
    initial_SOC: 0.5 # SOC of 50% at t0
    calendar_aging: 0.999
    factor: 1.
    unit_cost: 0. #3.

  house_temperature:
    activate: False
    energy: 'heat'
    environment: 'house'
    capacity: 2500.
    efficiency: 1.
    initial_SOC: 0.5
    calendar_aging: 1.

Conversion:
  turbine:
    activate: True
    environment: usine
    input_energy: 'heat_high' # MWh thermique high temperature
    output_energies:
      electricity: 0.4 # MWhélec /  MWhth HT
      heat_low: 0.6 # MWth LT / MWth HT

  electric_engine:
    activate: False
    environment: 'car'
    input_energy: 'electricity'
    output_energies:
      distance: 0.007 # = 1./150 1/(Wh/km)
      # heat: 0.1 # (10% of heat losses)
  
  combustion_engine:
    activate: False
    environment: 'car'
    input_energy: 'oil'
    output_energies:
      distance: 16.7 # = 1/0.06 1/(L/km)
      # heat: 5600. # = 8000*0.7 (PCI of oil * 70% of heat losses)

  electric_heater:
    activate: False
    environment: 'house'
    input_energy: 'electricity'
    output_energies:
      heat: 1.

  PAC:
    activate: False
    environment: 'house'
    input_energy: 'electricity'
    output_energies:
     heat: 3.

  generator:
    activate: False
    environment: 'car'
    input_energy: 'oil'
    output_energies:
      electricity: 2800. # = 8000*0.35, PCI of oil * efficiency
      heat: 5200. # 8000*0.65 PCI of oil * 65% of heat losses

# oil_PCI: 29 MJ/L = 8000 Wh/L